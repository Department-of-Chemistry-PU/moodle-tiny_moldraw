define("tiny_moldraw/commands",["exports","editor_tiny/utils","core/str","core/templates","core/modal","core/config","./common"],(function(_exports,_utils,_str,_templates,_modal,_config,_common){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Commands helper for the Moodle tiny_moldraw plugin.
   *
   * @module      tiny_moldraw/commands
   * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,_templates=_interopRequireDefault(_templates),_modal=_interopRequireDefault(_modal),_config=_interopRequireDefault(_config);const handleAction=async editor=>{await _modal.default.create({title:await(0,_str.get_string)("sketchtitle","tiny_moldraw"),body:`\n        ${await _templates.default.render("tiny_moldraw/moldraw_iframe",{src:`${_config.default.wwwroot}/lib/editor/tiny/plugins/moldraw/chem/chem.html`})}\n        <p>Example body content</p>\n        <button id="actionbutton" class="actionbutton">Insert</button>\n        <script src="../build/chem.min.js"><\/script>\n      `,show:!0,removeOnClose:!0});var screenWidth=window.innerWidth,screenHeight=window.innerHeight,modalWidth=.8*screenWidth,modalHeight=.8*screenHeight,topPosition=(screenHeight-modalHeight)/2;document.querySelector(".modal-dialog").style.cssText="max-width: unset; width: "+modalWidth+"px; height: "+modalHeight+"px; margin: "+topPosition+"px auto; padding: 0;",document.querySelector(".modal-content").style.cssText="max-height: unset; height: 100vh;",document.querySelector(".modal-body").style.cssText="padding: 0;",window.console.log(editor)};_exports.getSetup=async()=>{const[startMolDrawButtonNameTitle,startMolDrawMenuItemNameTitle,buttonImage]=await Promise.all([(0,_str.get_string)("button_startMolDraw",_common.component),(0,_str.get_string)("menuitem_startMolDraw",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.startMolDrawButtonName,{icon:_common.icon,tooltip:startMolDrawButtonNameTitle,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.startMolDrawMenuItemName,{icon:_common.icon,text:startMolDrawMenuItemNameTitle,onAction:()=>handleAction(editor)})}}}));

//# sourceMappingURL=commands.min.js.map