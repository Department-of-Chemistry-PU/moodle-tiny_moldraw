{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Tiny tiny_moldraw for Moodle.\n *\n * @module      tiny_moldraw/plugin\n * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { getTinyMCE } from 'editor_tiny/loader';\nimport { getPluginMetadata } from 'editor_tiny/utils';\n\nimport { component, pluginName } from './common';\nimport { register as registerOptions } from './options';\nimport { getSetup as getCommandSetup } from './commands';\nimport * as Configuration from './configuration';\n\n// Setup the tiny_moldraw Plugin.\nexport default new Promise((resolve) => {\n    Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n        getCommandSetup(),\n    ]).then(([tinyMCE, pluginMetadata, setupCommands]) => {\n        // Register the plugin with TinyMCE\n        tinyMCE.PluginManager.add(pluginName, (editor) => {\n            // Register any options that your plugin has\n            registerOptions(editor);\n\n            // Setup any commands such as buttons, menu items, and so on.\n            setupCommands(editor);\n\n            // Return the pluginMetadata object. This is used by TinyMCE to display a help link for your plugin.\n            return pluginMetadata;\n        });\n\n        resolve([pluginName, Configuration]);\n    });\n});"],"names":["Promise","resolve","all","component","pluginName","then","_ref","tinyMCE","pluginMetadata","setupCommands","PluginManager","add","editor","Configuration"],"mappings":";;;;;;;kCAgCe,IAAIA,SAASC,UACxBD,QAAQE,IAAI,EACR,yBACA,4BAAkBC,kBAAWC,qBAC7B,0BACDC,MAAKC,WAAEC,QAASC,eAAgBC,oBAE/BF,QAAQG,cAAcC,IAAIP,oBAAaQ,+BAEnBA,QAGhBH,cAAcG,QAGPJ,kBAGXP,QAAQ,CAACG,mBAAYS"}