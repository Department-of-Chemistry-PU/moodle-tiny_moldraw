{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Common values helper for the Moodle tiny_keteditor plugin.\n *\n * @module      tiny_keteditor/embed\n * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    get_string as getString\n}\nfrom 'core/str';\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\nimport Config from 'core/config';\nimport {\n    exception as displayException\n}\nfrom 'core/notification';\n\nexport const ketcherEmbed = class {\n    editor = null;\n    constructor(editor) {\n        this.editor = editor;\n    }\n    init = async() => {\n        const modal = await Modal.create({\n            title: getString('buttonNameTitle', 'tiny_keteditor'),\n            show: true,\n            removeOnClose: true,\n        });\n        Templates.renderForPromise('tiny_keteditor/ketcher_template', {})\n        .then(async({\n                html,\n                js\n            }) => {\n            Templates.appendNodeContents(modal.getBody(), html, js);\n            const scripturl = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/keteditor/ketcher/static/js/main.963f80c2.js`);\n            var script = document.createElement('script');\n            script.src = scripturl.toString();\n            document.body.appendChild(script); // Append the script to the body\n            const cssurl = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/keteditor/ketcher/static/css/main.3fc9c0f8.css`);\n            var link = document.createElement('link');\n            link.href = cssurl.toString();\n            link.rel = 'stylesheet';\n            document.head.appendChild(link); // Append the link to the head\n            window.parent.document.querySelector(\".modal-dialog\").style.maxWidth = '850px'; // add this line to fix the model width.\n        })\n        .catch((error) => displayException(error));\n    };\n    waitForKetcher = () => {\n        return new Promise((resolve, reject) => {\n            const checkKetcher = setInterval(() => {\n                if (window.ketcher) {\n                    clearInterval(checkKetcher);\n                    resolve(window.ketcher);\n                }\n            }, 100);\n            setTimeout(() => {\n                clearInterval(checkKetcher);\n                reject(new Error('Ketcher loading timeout'));\n            }, 5000); // Timeout after 5 seconds\n        });\n    };\n};\n\nexport const saveData = async function() {\n    var ketcher = window.ketcher;\n    var struct = await ketcher.getKet();\n    var image = await ketcher.generateImage(struct, {\n        outputFormat: \"svg\",\n        backgroundColor: \"255, 255, 255\"\n    });\n    // Create a new FileReader instance\n    var reader = new FileReader();\n    // Add an event listener for the 'load' event\n    reader.addEventListener('load', function() {\n        // The result attribute contains the data as a Base64 encoded string\n        var base64Image = reader.result;\n\n        // Parse the SVG to get the width and height\n        var parser = new DOMParser();\n        var svgDoc = parser.parseFromString(atob(base64Image.split(',')[1]), \"image/svg+xml\");\n        var svgElement = svgDoc.documentElement;\n        var width = svgElement.getAttribute(\"width\");\n        var height = svgElement.getAttribute(\"height\");\n        if (window.parent.tinyMCE && window.parent.tinyMCE.activeEditor) {\n            var url = URL.createObjectURL(image);\n            var ketString = JSON.stringify(struct);\n            var ketStruct = ketString.replace(/\\\\n/g, '').replace(/\\\\\"/g, '\"').replace(/ /g, '').slice(1, -1);\n            var content = '<img src=\"' + url + '\" width=\"' + width + '\" height=\"' + height + '\">';\n            window.parent.tinyMCE.activeEditor.execCommand('mceInsertContent', 0, content);\n            window.parent.tinyMCE.activeEditor.execCommand('mceInsertContent', 0, '<!--' + ketStruct + '-->');\n        } else {\n            window.console.log('TinyMCE not initialized');\n        }\n        window.parent.document.querySelector(\".modal .close\").click();\n//$(window.parent.document).find(\".modal\").find('.close').click();\n    });\n\n    // Start reading the Blob as a Base64 encoded string\n    reader.readAsDataURL(image);\n};\n"],"names":["constructor","editor","async","modal","Modal","create","title","show","removeOnClose","renderForPromise","then","html","js","appendNodeContents","getBody","scripturl","URL","Config","wwwroot","script","document","createElement","src","toString","body","appendChild","cssurl","link","href","rel","head","window","parent","querySelector","style","maxWidth","catch","error","Promise","resolve","reject","checkKetcher","setInterval","ketcher","clearInterval","setTimeout","Error","struct","getKet","image","generateImage","outputFormat","backgroundColor","reader","FileReader","addEventListener","base64Image","result","svgElement","DOMParser","parseFromString","atob","split","documentElement","width","getAttribute","height","tinyMCE","activeEditor","url","createObjectURL","ketStruct","JSON","stringify","replace","slice","content","execCommand","console","log","click","readAsDataURL"],"mappings":"qqBAmC4B,MAExBA,YAAYC,sCADH,mCAIFC,gBACGC,YAAcC,eAAMC,OAAO,CAC7BC,OAAO,mBAAU,kBAAmB,kBACpCC,MAAM,EACNC,eAAe,uBAETC,iBAAiB,kCAAmC,IAC7DC,MAAKR,MAAAA,WAAMS,KACJA,KADIC,GAEJA,4BAEMC,mBAAmBV,MAAMW,UAAWH,KAAMC,UAC9CG,UAAY,IAAIC,cAAOC,gBAAOC,sFAChCC,OAASC,SAASC,cAAc,UACpCF,OAAOG,IAAMP,UAAUQ,WACvBH,SAASI,KAAKC,YAAYN,cACpBO,OAAS,IAAIV,cAAOC,gBAAOC,wFAC7BS,KAAOP,SAASC,cAAc,QAClCM,KAAKC,KAAOF,OAAOH,WACnBI,KAAKE,IAAM,aACXT,SAASU,KAAKL,YAAYE,MAC1BI,OAAOC,OAAOZ,SAASa,cAAc,iBAAiBC,MAAMC,SAAW,WAE1EC,OAAOC,QAAU,2BAAiBA,mDAEtB,IACN,IAAIC,SAAQ,CAACC,QAASC,gBACnBC,aAAeC,aAAY,KACzBX,OAAOY,UACPC,cAAcH,cACdF,QAAQR,OAAOY,YAEpB,KACHE,YAAW,KACPD,cAAcH,cACdD,OAAO,IAAIM,MAAM,8BAClB,eAtCF7C,OAASA,2BA2CEC,qBAChByC,QAAUZ,OAAOY,QACjBI,aAAeJ,QAAQK,SACvBC,YAAcN,QAAQO,cAAcH,OAAQ,CAC5CI,aAAc,MACdC,gBAAiB,kBAGjBC,OAAS,IAAIC,WAEjBD,OAAOE,iBAAiB,QAAQ,eAExBC,YAAcH,OAAOI,OAKrBC,YAFS,IAAIC,WACGC,gBAAgBC,KAAKL,YAAYM,MAAM,KAAK,IAAK,iBAC7CC,gBACpBC,MAAQN,WAAWO,aAAa,SAChCC,OAASR,WAAWO,aAAa,aACjClC,OAAOC,OAAOmC,SAAWpC,OAAOC,OAAOmC,QAAQC,aAAc,KACzDC,IAAMrD,IAAIsD,gBAAgBrB,OAE1BsB,UADYC,KAAKC,UAAU1B,QACL2B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KAAKA,QAAQ,KAAM,IAAIC,MAAM,GAAI,GAC3FC,QAAU,aAAeP,IAAM,YAAcL,MAAQ,aAAeE,OAAS,KACjFnC,OAAOC,OAAOmC,QAAQC,aAAaS,YAAY,mBAAoB,EAAGD,SACtE7C,OAAOC,OAAOmC,QAAQC,aAAaS,YAAY,mBAAoB,EAAG,UAASN,UAAY,eAE3FxC,OAAO+C,QAAQC,IAAI,2BAEvBhD,OAAOC,OAAOZ,SAASa,cAAc,iBAAiB+C,WAK1D3B,OAAO4B,cAAchC"}