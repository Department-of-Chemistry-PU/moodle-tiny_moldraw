{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["import { getButtonImage } from \"editor_tiny/utils\";\nimport { get_string as getString } from \"core/str\";\nimport Modal from \"core/modal\";\nimport { component, startMolDrawButtonName, startMolDrawMenuItemName, icon } from \"./common\";\nimport { loadBody, loadFooter } from \"./body\";\n\nconst handleAction = async (editor) => {\n  try {\n    const title = await getString(\"sketchtitle\", \"tiny_moldraw\");\n    const bodyContent = await loadBody();\n    const footerContent = await loadFooter();\n\n    await Modal.create({\n      title: title,\n      body: bodyContent,\n      footer: footerContent,\n      show: true,\n      removeOnClose: true,\n    });\n\n    const modalWidth = 850;\n    const modalHeight = 600;\n    const screenHeight = window.innerHeight;\n    const topPosition = (screenHeight - modalHeight) / 2;\n    document.querySelector(\".modal-dialog\").style.cssText =\n      `max-width: unset; width: ${modalWidth}px; height: ${modalHeight}px; margin: ${topPosition}px auto; padding: 0;`;\n    document.querySelector(\".modal-content\").style.cssText =\n      \"max-height: 600px; height: 100vh;\";\n    document.querySelector(\".modal-body\").style.cssText = \"padding: 0;\";\n  } catch (error) {\n    console.error(\"Error handling action:\", error);\n  }\n};\n\nexport const getSetup = async () => {\n  try {\n    const [startMolDrawButtonNameTitle, startMolDrawMenuItemNameTitle, buttonImage] = await Promise.all([\n      getString(\"button_startMolDraw\", component),\n      getString(\"menuitem_startMolDraw\", component),\n      getButtonImage(\"icon\", component),\n    ]);\n\n    return (editor) => {\n      editor.ui.registry.addIcon(icon, buttonImage.html);\n\n      editor.ui.registry.addButton(startMolDrawButtonName, {\n        icon,\n        tooltip: startMolDrawButtonNameTitle,\n        onAction: () => handleAction(editor),\n      });\n\n      editor.ui.registry.addMenuItem(startMolDrawMenuItemName, {\n        icon,\n        text: startMolDrawMenuItemNameTitle,\n        onAction: () => handleAction(editor),\n      });\n    };\n  } catch (error) {\n    console.error(\"Error setting up plugin:\", error);\n  }\n};\n"],"names":["handleAction","async","title","bodyContent","footerContent","Modal","create","body","footer","show","removeOnClose","modalWidth","modalHeight","topPosition","window","innerHeight","document","querySelector","style","cssText","error","console","startMolDrawButtonNameTitle","startMolDrawMenuItemNameTitle","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","startMolDrawButtonName","tooltip","onAction","addMenuItem","startMolDrawMenuItemName","text"],"mappings":"qTAMMA,aAAeC,MAAAA,mBAEXC,YAAc,mBAAU,cAAe,gBACvCC,kBAAoB,oBACpBC,oBAAsB,4BAEtBC,eAAMC,OAAO,CACjBJ,MAAOA,MACPK,KAAMJ,YACNK,OAAQJ,cACRK,MAAM,EACNC,eAAe,UAGXC,WAAa,IACbC,YAAc,IAEdC,aADeC,OAAOC,YACQH,aAAe,EACnDI,SAASC,cAAc,iBAAiBC,MAAMC,QAC3C,4BAA2BR,yBAAyBC,0BAA0BC,kCACjFG,SAASC,cAAc,kBAAkBC,MAAMC,QAC7C,oCACFH,SAASC,cAAc,eAAeC,MAAMC,QAAU,cACtD,MAAOC,OACPC,QAAQD,MAAM,yBAA0BA,2BAIpBnB,oBAEbqB,4BAA6BC,8BAA+BC,mBAAqBC,QAAQC,IAAI,EAClG,mBAAU,sBAAuBC,oBACjC,mBAAU,wBAAyBA,oBACnC,yBAAe,OAAQA,4BAGjBC,SACNA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAE7CL,OAAOC,GAAGC,SAASI,UAAUC,+BAAwB,CACnDH,KAAAA,aACAI,QAASd,4BACTe,SAAU,IAAMrC,iBAGlB4B,OAAOC,GAAGC,SAASQ,YAAYC,iCAA0B,CACvDP,KAAAA,aACAQ,KAAMjB,8BACNc,SAAU,IAAMrC,kBAGpB,MAAOoB,OACPC,QAAQD,MAAM,2BAA4BA"}