{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["import { getButtonImage } from \"editor_tiny/utils\";\r\nimport { get_string as getString } from \"core/str\";\r\nimport Modal from \"core/modal\";\r\nimport { component, startMolDrawButtonName, startMolDrawMenuItemName, icon } from \"./common\";\r\nimport { loadBody, loadFooter } from \"../../chem/body\";\r\n\r\nconst handleAction = async (editor) => {\r\n  try {\r\n    const title = await getString(\"sketchtitle\", \"tiny_moldraw\");\r\n    const bodyContent = await loadBody();\r\n    const footerContent = await loadFooter();\r\n\r\n    await Modal.create({\r\n      title: title,\r\n      body: bodyContent,\r\n      footer: footerContent,\r\n      show: true,\r\n      removeOnClose: true,\r\n    });\r\n\r\n    const modalWidth = 850;\r\n    const modalHeight = 600;\r\n    const screenHeight = window.innerHeight;\r\n    const topPosition = (screenHeight - modalHeight) / 2;\r\n    document.querySelector(\".modal-dialog\").style.cssText =\r\n      `max-width: unset; width: ${modalWidth}px; height: ${modalHeight}px; margin: ${topPosition}px auto; padding: 0;`;\r\n    document.querySelector(\".modal-content\").style.cssText =\r\n      \"max-height: 600px; height: 100vh;\";\r\n    document.querySelector(\".modal-body\").style.cssText = \"padding: 0;\";\r\n  } catch (error) {\r\n    console.error(\"Error handling action:\", error);\r\n  }\r\n};\r\n\r\nexport const getSetup = async () => {\r\n  try {\r\n    const [startMolDrawButtonNameTitle, startMolDrawMenuItemNameTitle, buttonImage] = await Promise.all([\r\n      getString(\"button_startMolDraw\", component),\r\n      getString(\"menuitem_startMolDraw\", component),\r\n      getButtonImage(\"icon\", component),\r\n    ]);\r\n\r\n    return (editor) => {\r\n      editor.ui.registry.addIcon(icon, buttonImage.html);\r\n\r\n      editor.ui.registry.addButton(startMolDrawButtonName, {\r\n        icon,\r\n        tooltip: startMolDrawButtonNameTitle,\r\n        onAction: () => handleAction(editor),\r\n      });\r\n\r\n      editor.ui.registry.addMenuItem(startMolDrawMenuItemName, {\r\n        icon,\r\n        text: startMolDrawMenuItemNameTitle,\r\n        onAction: () => handleAction(editor),\r\n      });\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error setting up plugin:\", error);\r\n  }\r\n};\r\n"],"names":["handleAction","async","title","bodyContent","footerContent","Modal","create","body","footer","show","removeOnClose","modalWidth","modalHeight","topPosition","window","innerHeight","document","querySelector","style","cssText","error","console","startMolDrawButtonNameTitle","startMolDrawMenuItemNameTitle","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","startMolDrawButtonName","tooltip","onAction","addMenuItem","startMolDrawMenuItemName","text"],"mappings":"8TAMMA,aAAeC,MAAAA,mBAEXC,YAAc,mBAAU,cAAe,gBACvCC,kBAAoB,oBACpBC,oBAAsB,4BAEtBC,eAAMC,OAAO,CACjBJ,MAAOA,MACPK,KAAMJ,YACNK,OAAQJ,cACRK,MAAM,EACNC,eAAe,UAGXC,WAAa,IACbC,YAAc,IAEdC,aADeC,OAAOC,YACQH,aAAe,EACnDI,SAASC,cAAc,iBAAiBC,MAAMC,QAC3C,4BAA2BR,yBAAyBC,0BAA0BC,kCACjFG,SAASC,cAAc,kBAAkBC,MAAMC,QAC7C,oCACFH,SAASC,cAAc,eAAeC,MAAMC,QAAU,cACtD,MAAOC,OACPC,QAAQD,MAAM,yBAA0BA,2BAIpBnB,oBAEbqB,4BAA6BC,8BAA+BC,mBAAqBC,QAAQC,IAAI,EAClG,mBAAU,sBAAuBC,oBACjC,mBAAU,wBAAyBA,oBACnC,yBAAe,OAAQA,4BAGjBC,SACNA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAE7CL,OAAOC,GAAGC,SAASI,UAAUC,+BAAwB,CACnDH,KAAAA,aACAI,QAASd,4BACTe,SAAU,IAAMrC,iBAGlB4B,OAAOC,GAAGC,SAASQ,YAAYC,iCAA0B,CACvDP,KAAAA,aACAQ,KAAMjB,8BACNc,SAAU,IAAMrC,kBAGpB,MAAOoB,OACPC,QAAQD,MAAM,2BAA4BA"}