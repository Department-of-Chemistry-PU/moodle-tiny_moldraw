{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Common values helper for the Moodle tiny_keteditor plugin.\n *\n * @module      tiny_keteditor/commands\n * @copyright   2024 Venkatesan Rangarajan <venkatesanrpu@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {component,icon,buttonName} from './common';\nimport {KetcherEmbed} from './embed';\n\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\n\nconst handleAction = (editor) => {\n    const ketcherImage = new KetcherEmbed(editor);\n    ketcherImage.init();\n};\n\nexport const getSetup = async() => {\n//    const isImage = (node) => node.nodeName.toLowerCase() === 'img';\n\n    const [\n        buttonNameTitle,\n        buttonImage,\n    ] = await Promise.all([\n                getString('buttonNameTitle', component),\n                getButtonImage('icon', component),\n            ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the startdemo Toolbar Button.\n        editor.ui.registry.addButton(buttonName, {\n            icon,\n            tooltip: buttonNameTitle,\n            onAction: () => handleAction(editor),\n        });\n\n\n        // Add the startdemo Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: buttonNameTitle,\n            onAction: () => handleAction(editor),\n        });\n\n    };\n};\n"],"names":["handleAction","editor","KetcherEmbed","init","async","buttonNameTitle","buttonImage","Promise","all","component","ui","registry","addIcon","icon","html","addButton","buttonName","tooltip","onAction","addMenuItem","text"],"mappings":";;;;;;;;MAiCMA,aAAgBC,SACG,IAAIC,oBAAaD,QACzBE,0BAGOC,gBAIhBC,gBACAC,mBACMC,QAAQC,IAAI,EACV,mBAAU,kBAAmBC,oBAC7B,yBAAe,OAAQA,4BAG3BR,SAEJA,OAAOS,GAAGC,SAASC,QAAQC,aAAMP,YAAYQ,MAG7Cb,OAAOS,GAAGC,SAASI,UAAUC,mBAAY,CACrCH,KAAAA,aACAI,QAASZ,gBACTa,SAAU,IAAMlB,aAAaC,UAMjCA,OAAOS,GAAGC,SAASQ,YAAYH,mBAAY,CACvCH,KAAAA,aACAO,KAAMf,gBACNa,SAAU,IAAMlB,aAAaC"}